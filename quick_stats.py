# quick_stats.py
from modules.database import DatabaseManager, Interview, Response, Question, AIConsultation

def quick_stats():
    print("‚ö° –ë–´–°–¢–†–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("=" * 30)
    
    db = DatabaseManager()
    session = db.get_session()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ü–∏—Ñ—Ä—ã
    interviews = session.query(Interview).count()
    completed = session.query(Interview).filter(Interview.status == 'completed').count()
    responses = session.query(Response).count()
    consultations = session.query(AIConsultation).count()
    
    print(f"üé§ –ò–Ω—Ç–µ—Ä–≤—å—é: {interviews} (–∑–∞–≤–µ—Ä—à–µ–Ω–æ: {completed})")
    print(f"üìù –û—Ç–≤–µ—Ç–æ–≤: {responses}")
    print(f"üí° –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: {consultations}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–±–æ—Ä–æ–≤
    choice_a = session.query(Response).filter(Response.selected_option == 'A').count()
    choice_b = session.query(Response).filter(Response.selected_option == 'B').count()
    
    if choice_a + choice_b > 0:
        print(f"\nüìä –í—ã–±–æ—Ä—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤:")
        print(f"   –ü—Ä–æ–¥—É–∫—Ç –ê: {choice_a} ({choice_a/(choice_a+choice_b)*100:.1f}%)")
        print(f"   –ü—Ä–æ–¥—É–∫—Ç –ë: {choice_b} ({choice_b/(choice_a+choice_b)*100:.1f}%)")
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    last_interview = session.query(Interview).order_by(Interview.started_at.desc()).first()
    if last_interview:
        print(f"\nüïê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–Ω—Ç–µ—Ä–≤—å—é: {last_interview.username} ({last_interview.status})")
    
    print("=" * 30)

if __name__ == "__main__":
    quick_stats()
