# test_extended_database.py
from modules.database import DatabaseManager, Question, Interview, Response, AIConsultation

def test_extended_database():
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ë–î
        db = DatabaseManager()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        db.create_tables()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
        session = db.get_session()
        
        tables_to_check = [
            ('questions', Question),
            ('interviews', Interview), 
            ('responses', Response),
            ('ai_consultations', AIConsultation)
        ]
        
        print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü...")
        for table_name, model_class in tables_to_check:
            try:
                count = session.query(model_class).count()
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table_name}: {count} –∑–∞–ø–∏—Å–µ–π")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å —Ç–∞–±–ª–∏—Ü–µ–π {table_name}: {e}")
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_extended_database()
