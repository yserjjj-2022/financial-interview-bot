# modules/gigachat_handler.py
import os
from dotenv import load_dotenv
from gigachat import GigaChat
import logging

load_dotenv()

class GigaChatHandler:
    def __init__(self):
        self.credentials = os.getenv('GIGACHAT_CREDENTIALS')
        if not self.credentials:
            raise ValueError("GIGACHAT_CREDENTIALS –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        
        self.giga = GigaChat(
            credentials=self.credentials,
            scope="GIGACHAT_API_PERS",
            model="GigaChat",
            verify_ssl_certs=False
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        self.logger = logging.getLogger(__name__)
    
    def get_financial_advice(self, user_query, question_context):
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –æ—Ç GigaChat
        
        Args:
            user_query (str): –í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            question_context (dict): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –∏ —Ä—ã–Ω–æ—á–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π
        
        Returns:
            str: –û—Ç–≤–µ—Ç GigaChat
        """
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è GigaChat
            prompt = self._build_financial_prompt(user_query, question_context)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            response = self.giga.chat(prompt)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
            ai_response = response.choices[0].message.content
            
            self.logger.info(f"GigaChat –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å: {user_query[:50]}...")
            return ai_response
            
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ GigaChat: {e}")
            return self._get_fallback_response(user_query)
    
    def _build_financial_prompt(self, user_query, question_context):
        """–°—Ç—Ä–æ–∏—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è GigaChat —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º"""
        
        prompt = f"""–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –î–∞–π –ø–æ–¥—Ä–æ–±–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –ø—Ä–æ–¥—É–∫—Ç–∞–º.

–ö–û–ù–¢–ï–ö–°–¢ –í–û–ü–†–û–°–ê:
{question_context.get('question_text', '')}

–†–´–ù–û–ß–ù–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø:
{question_context.get('market_context', '')}

–ü–†–û–î–£–ö–¢ –ê: {question_context.get('option_a', '')}
–î–µ—Ç–∞–ª–∏: {question_context.get('option_a_details', '')}

–ü–†–û–î–£–ö–¢ –ë: {question_context.get('option_b', '')}
–î–µ—Ç–∞–ª–∏: {question_context.get('option_b_details', '')}

–í–û–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: {user_query}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –û–¢–í–ï–¢–£:
- –î–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å —É—á–µ—Ç–æ–º —Ä—ã–Ω–æ—á–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏
- –û–±—ä—è—Å–Ω–∏ —Ä–∏—Å–∫–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
- –ò—Å–ø–æ–ª—å–∑—É–π —Ä–∞—Å—á–µ—Ç—ã —Ä–µ–∞–ª—å–Ω–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ
- –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–Ω—è—Ç–Ω—ã–º –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
- –ù–ï –ü–†–ï–í–´–®–ê–ô 300 –°–õ–û–í - —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è Telegram
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –ø—É–Ω–∫—Ç–∞–º
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è

–û—Ç–≤–µ—Ç:"""
        
        return prompt
    
    def _get_fallback_response(self, user_query):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ GigaChat"""
        return f"""
üí° **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞**

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞.

–í–∞—à –≤–æ–ø—Ä–æ—Å: "{user_query}"

**–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
‚Ä¢ –ü—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —Å–≤–æ–∏ —Ü–µ–ª–∏ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Ä–∏—Å–∫—É
‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (–Ω–æ–º–∏–Ω–∞–ª—å–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å - –∏–Ω—Ñ–ª—è—Ü–∏—è)
‚Ä¢ –î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∞–∫—Ç–∏–≤–æ–≤
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞–º–∏ –ø—Ä–∏ –∫—Ä—É–ø–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–∑–∂–µ.
"""

    def test_connection(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GigaChat"""
        try:
            response = self.giga.chat("–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ.")
            return True, response.choices[0].message.content
        except Exception as e:
            return False, str(e)
